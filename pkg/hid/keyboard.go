package hid

import (
	"trump/pkg/capture"
	"fmt"
	"strings"
)

var usbUsageCodes = []string{
	"",
	"{ERROR_ROLL_OVER}",
	"{POST_FAIL}",
	"{ERROR_UNDEFINED}",
	"a",
	"b",
	"c",
	"d",
	"e",
	"f",
	"g",
	"h",
	"i",
	"j",
	"k",
	"l",
	"m",
	"n",
	"o",
	"p",
	"q",
	"r",
	"s",
	"t",
	"u",
	"v",
	"w",
	"x",
	"y",
	"z",
	"1",
	"2",
	"3",
	"4",
	"5",
	"6",
	"7",
	"8",
	"9",
	"0",
	"{ENTER}",
	"{ESCAPE}",
	"{BACKSPACE}",
	"{TAB}",
	" ",
	"-",
	"=",
	"[",
	"]",
	"\\",
	"#",
	";",
	"'",
	"`",
	",",
	".",
	"/",
	"{CAPS_LOCK}",
	"{F1}",
	"{F2}",
	"{F3}",
	"{F4}",
	"{F5}",
	"{F6}",
	"{F7}",
	"{F8}",
	"{F9}",
	"{F10}",
	"{F11}",
	"{F12}",
	"{PRINT_SCREEN}",
	"{SCROLL_LOCK}",
	"{PAUSE}",
	"{INSERT}",
	"{HOME}",
	"{PAGE_UP}",
	"{DELETE}",
	"{END}",
	"{PAGE_DOWN}",
	"{RIGHT_ARROW}",
	"{LEFT_ARROW}",
	"{DOWN_ARROW}",
	"{UP_ARROW}",
	"[NUM_LOCK]",
	"[/]",
	"[*]",
	"[-]",
	"[+]",
	"[ENTER]",
	"[1]",
	"[2]",
	"[3]",
	"[4]",
	"[5]",
	"[6]",
	"[7]",
	"[8]",
	"[9]",
	"[0]",
	"[.]",
	"\\",
	"{APPLICATION}",
	"{POWER}",
	"[=]",
	"{F13}",
	"{F14}",
	"{F15}",
	"{F16}",
	"{F17}",
	"{F18}",
	"{F19}",
	"{F20}",
	"{F21}",
	"{F22}",
	"{F23}",
	"{F24}",
	"{EXECUTE}",
	"{HELP}",
	"{MENU}",
	"{SELECT}",
	"{STOP}",
	"{AGAIN}",
	"{UNDO}",
	"{CUT}",
	"{COPY}",
	"{PASTE}",
	"{FIND}",
	"{MUTE}",
	"{VOLUME_UP}",
	"{VOLUME_DOWN}",
	"{LOCKING_CAPS_LOCK}",
	"{LOCKING_NUM_LOCK}",
	"{LOCKING_SCROLL_LOCK}",
	"[,]",
	"[=]",
	"{INTERNATIONAL1}",
	"{INTERNATIONAL2}",
	"{INTERNATIONAL3}",
	"{INTERNATIONAL4}",
	"{INTERNATIONAL5}",
	"{INTERNATIONAL6}",
	"{INTERNATIONAL7}",
	"{INTERNATIONAL8}",
	"{INTERNATIONAL9}",
	"{LANG1}",
	"{LANG2}",
	"{LANG3}",
	"{LANG4}",
	"{LANG5}",
	"{LANG6}",
	"{LANG7}",
	"{LANG8}",
	"{LANG9}",
	"{ALTERNATE_ERASE}",
	"{SYSRQ/ATTENTION}",
	"{CANCEL}",
	"{CLEAR}",
	"{PRIOR}",
	"{RETURN}",
	"{SEPARATOR}",
	"{OUT}",
	"{OPER}",
	"{CLEAR/AGAIN}",
	"{CR_SEL/PROPS}",
	"{EX_SEL}",
	"{RESERVED}",
	"{RESERVED}",
	"{RESERVED}",
	"{RESERVED}",
	"{RESERVED}",
	"{RESERVED}",
	"{RESERVED}",
	"{RESERVED}",
	"{RESERVED}",
	"{RESERVED}",
	"{RESERVED}",
	"[00]",
	"[000]",
	"{THOUSANDS_SEPARATOR}",
	"{DECIMAL_SEPARATOR}",
	"{CURRENCY_UNIT}",
	"{CURRENCY_SUB_UNIT}",
	"[(]",
	"[)]",
	"[}]",
	"[{]",
	"[TAB]",
	"[BACKSPACE]",
	"[A]",
	"[B]",
	"[C]",
	"[D]",
	"[E]",
	"[F]",
	"[XOR]",
	"[^]",
	"[%]",
	"[<]",
	"[>]",
	"[&]",
	"[&&]",
	"[|]",
	"[||]",
	"[:]",
	"[#]",
	"[SPACE]",
	"[@]",
	"[!]",
	"[MEMORY_STORE]",
	"[MEMORY_RECALL]",
	"[MEMORY_CLEAR]",
	"[MEMORY_ADD]",
	"[MEMORY_SUBTRACT]",
	"[MEMORY_MULTIPLY]",
	"[MEMORY_DIVIDE]",
	"[+/-]",
	"[CLEAR]",
	"[CLEAR_ENTRY]",
	"[BINARY]",
	"[OCTAL]",
	"[DECIMAL]",
	"[HEXADECIMAL]",
	"{RESERVED}",
	"{RESERVED}",
	"{LEFT_CONTROL}",
	"{LEFT_SHIFT}",
	"{LEFT_GUI}",
	"{RIGHT_CONTROL}",
	"{RIGHT_SHIFT}",
	"{RIGHT_ALT}",
	"{RIGHT_GUI}",
}
var usbModifiers = map[uint8]string{
	0x01: "{LEFT_CONTROL}",
	0x02: "{LEFT_SHIFT}",
	0x04: "{LEFT_ALT}",
	0x08: "{LEFT_GUI}",
	0x10: "{RIGHT_CONTROL}",
	0x20: "{RIGHT_SHIFT}",
	0x40: "{RIGHT_ALT}",
	0x80: "{RIGHT_GUI}",
}

func UsbToString(packet capture.USBData) string {
	res := ""
	modifiers := ""
	cnt := 0
	for i, key := range packet.Payload {
		if i >= 2 {
			res += usbUsageCodes[key]
			if key != 0 {
				cnt++
			}
		} else if i == 0 {
			for k, v := range usbModifiers {
				if k & key == k {
					modifiers += v
				}
			}
		}
	}
	if modifiers != "" && cnt > 0 {
		res = modifiers + "|" + res
		cnt++
	}
	if cnt > 1 {
		res = "(" + res + ")"
	}
	return res
}

func UsbPayloadToHid(payload []byte) string {
	res := ""
	for _, b := range payload {
		res += fmt.Sprintf("%hhx ", b)
	}
	return strings.Trim(res, " ")
}
